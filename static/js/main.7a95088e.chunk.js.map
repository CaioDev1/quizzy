{"version":3,"sources":["components/Button/Button.jsx","components/Notification/Notification.jsx","components/TeamIcon/TeamIcon.jsx","API-CONFIG/API-CONFIG.js","Contexts.js","views/LandingPage/LandingPage.jsx","components/pages/CreatePage/CreateQuestion/CreateAlternative/CreateAlternative.jsx","components/pages/CreatePage/CreateQuestion/CreateQuestion.jsx","views/CreatePage/CreatePage.jsx","components/pages/QuizzPage/Alternative/Alternative.jsx","views/QuizzPage/QuizzPage.jsx","components/pages/ResultsPage/EstatisticBar/EstatisticBar.jsx","components/pages/ResultsPage/PlayerResult/PlayerResult.jsx","views/ResultsPage/ResultsPage.jsx","App.jsx","index.js"],"names":["Button","type","to","children","color","buttonType","className","style","backgroundColor","Notification","message","setIsError","active","useState","isSetted","setIsSetted","useEffect","setTimeout","Fade","in","timeout","mountOnEnter","unmountOnExit","TeamIcon","team","height","width","margin","background","src","api","axios","create","baseURL","CurrentPlayerIdContext","createContext","LandingPage","username","setUsername","quizzId","setQuizzCode","isSubmitComplete","setIsSubmitComplete","isError","sabidos","wikipedia","chosenTeam","setChosenTeam","useContext","setCurrentPlayerId","handleTeamSelection","preValue","Object","keys","map","t","document","querySelector","textContent","id","action","onSubmit","e","preventDefault","length","post","then","response","data","playerId","catch","err","name","value","onChange","target","placeholder","onClick","CreateAlternative","mark","content","selected","setQuestionValue","setCorrectAlternative","handleDeleteAlternative","indexOf","CreateQuestion","setQuestionList","index","title","alternatives","correct","question","setQuestion","setQuestionMark","Error","updatedAlternative","item","updatedCorrectAlternative","updatedAlternativesWithDelete","filter","i","CreatePage","alternativeSchema","questionList","owner","setOwner","theme","setTheme","setQuizzId","isQuizzCreated","setIsQuizzCreated","buttonText","setButtonText","isFormOK","q","hasCorrect","a","questions","validadeForm","disabled","Alternative","isCorrect","handleQuestionResult","status","changeAlternativeColor","QuizzPage","isTransitionActive","setIsTransitionActive","currentQuestion","setCurrentQuestion","isQuizzCompleted","setIsQuizzCompleted","userScore","setUserScore","useParams","currentPlayerId","isAutorized","setIsAutorized","questionNum","quizz","setQuizz","querySelectorAll","forEach","button","patch","questionId","updatedQuestionResult","correctAlternative","score","get","Promise","resolve","window","location","EstatisticBar","place","percentage","transition","setTransition","PlayerResult","ResultsPage","players","leaderingTeam","results","setResults","Array","v","Math","round","Slide","direction","Grow","App","basename","Provider","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7a95088e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './ButtonStyle.css'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Button({type='link', to='', children, color, buttonType='button'}) {\r\n    return type == \"button\" ? (\r\n        <button className='button' type={buttonType} style={{backgroundColor: color}}>{children}</button>\r\n    ) :\r\n    (\r\n        <Link to={to} className='button' style={{backgroundColor: color}}>{children}</Link>\r\n    )\r\n}\r\n\r\nexport default Button","import React, {useEffect, useState} from 'react'\r\nimport './NotificationStyle.css'\r\n\r\nimport {Fade} from '@material-ui/core'\r\n\r\nfunction Notification({message, setIsError, active}) {\r\n    let [isSetted, setIsSetted] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if(isSetted) {\r\n            setTimeout(() => setIsError({message: '', active: false}), 2500)\r\n        } else {\r\n            setIsSetted(true)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Fade in={active} timeout={300} mountOnEnter unmountOnExit>\r\n            <div className=\"notification\">\r\n                <h4>{message}</h4>\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport './TeamIconStyle.css'\r\n\r\n\r\nfunction TeamIcon({team, height, width, margin}) {\r\n    return (\r\n        <div className=\"team-icon\" style={{\r\n            background: team == 'wikipedia' ? 'blue' : 'red',\r\n            margin: margin ? margin : 'initial',\r\n            height: height ? height : '50px',\r\n            width: width ? width : '50px',\r\n        }}>\r\n            <img src={process.env.PUBLIC_URL + (team == 'wikipedia' ? '/Wikipedia_Logo.png' : '/Brain_Logo.png')} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamIcon","import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:5000'\r\n})\r\n\r\nexport default api","import {createContext} from 'react'\r\n\r\nlet CurrentPlayerIdContext = createContext({})\r\n\r\nexport default CurrentPlayerIdContext","import React, {useState, useContext, useEffect} from 'react'\nimport './LandingPageStyle.css'\n\nimport Button from '../../components/Button/Button'\nimport { Redirect } from 'react-router'\n\nimport Notification from '../../components/Notification/Notification'\nimport TeamIcon from '../../components/TeamIcon/TeamIcon'\n\nimport api from '../../API-CONFIG/API-CONFIG'\n\nimport CurrentPlayerIdContext from '../../Contexts'\n\nfunction LandingPage() {\n    let [username, setUsername] = useState('')\n    let [quizzId, setQuizzCode] = useState(null)\n    let [isSubmitComplete, setIsSubmitComplete] = useState(false)\n    let [isError, setIsError] = useState({\n        message: '',\n        active: false,\n    })\n\n    let [chosenTeam, setChosenTeam] = useState({\n        sabidos: false,\n        wikipedia: false\n    })\n\n    let [currentPlayerId, setCurrentPlayerId] = useContext(CurrentPlayerIdContext)\n\n    function handleTeamSelection(team) {\n        setChosenTeam(preValue => {\n            Object.keys(preValue).map(t => preValue[t] = false)\n\n            return {\n                ...preValue,\n                [team]: true\n            }\n        })\n    }\n\n    function handleUserSubmit(e) {\n        e.preventDefault()\n\n        validateForm()\n    }\n\n    function validateForm() {\n        document.querySelector('form button[type=submit]').textContent = 'CARREGANDO'\n\n        if(username.length && quizzId && (chosenTeam.sabidos || chosenTeam.wikipedia)) {\n            api.post('/player/add', {\n                username,\n                quizzId,\n                team: chosenTeam.sabidos ? 'sabidos' : 'wikipedia'\n            }).then(response => {\n                setCurrentPlayerId(response.data.playerId)\n\n                setIsSubmitComplete(true)\n            }).catch(err => {\n                setIsError({\n                    message: err.response.data.message, \n                    active: true\n                })\n            })\n        } else {\n            setIsError({\n                message: 'Campos não preenchidos!', \n                active: true\n            })\n        }\n    }\n\n    useEffect(() => {\n        if(isError) {\n            document.querySelector('form button[type=submit]').textContent = 'ENTRAR'\n        }\n    }, [isError])\n\n    return (\n        <div className=\"container\" id='landing-page'>\n            <div id='title'>\n                <h1>QUIZZY</h1>\n                <h3>Crie quizzes e desafie seus amigos!</h3>\n            </div>\n            <form action=\"\" onSubmit={handleUserSubmit}>\n                <fieldset id='inputs'>\n                    <input type=\"text\" name=\"\" id=\"\" value={username} onChange={e => {setUsername(e.target.value)}} placeholder='NOME' />\n                    <input type=\"number\" name=\"\" id=\"\" value={quizzId} onChange={e => {setQuizzCode(e.target.value)}} placeholder='CÓDIGO' />\n                </fieldset>\n                <fieldset id='teams'>\n                    <div id='team-sabidos' className={chosenTeam.sabidos ? 'selected' : ''} onClick={() => {handleTeamSelection('sabidos')}}>\n                        <TeamIcon team='sabidos' height='70px' width='70px' />\n                        <p>TIME SABIDOS</p>\n                    </div>\n                    <div id='team-wikipedia' className={chosenTeam.wikipedia ? 'selected' : ''}  onClick={() => {handleTeamSelection('wikipedia')}}>\n                        <TeamIcon team='wikipedia' height='70px' width='70px' />\n                        <p>TIME WIKIPEDIA</p>\n                    </div>\n                </fieldset>\n                <Button type='button' buttonType=\"submit\" color='#28D439'>ENTRAR</Button>\n            </form>\n            <Button to='/create' color='#343330'>CRIAR SEU QUIZZ</Button>\n            {isError.active && <Notification message={isError.message} setIsError={setIsError} active={isError.active} />}\n            {isSubmitComplete && <Redirect to={`/quizz/${quizzId}`} />}\n        </div>\n    )\n}\n\nexport default LandingPage","import React from 'react'\r\n\r\nfunction CreateAlternative({mark, content, selected, setQuestionValue, setCorrectAlternative, handleDeleteAlternative}) {\r\n\r\n    return (\r\n        <div className='create-question-alternative-field'>\r\n            <button className={`create-question-alternative-button ${selected ? 'selected' : ''}`} onClick={() => {setCorrectAlternative(mark)}}>{mark}</button>\r\n            <input type=\"text\" name=\"\" id=\"\" value={content} onChange={e => {setQuestionValue(mark, e.target.value)}} className='create-question-alternative' placeholder='TEXTO DA ALTERNATIVA'/>\r\n            {\r\n                ['A', 'B'].indexOf(mark) == -1 && <button className='create-question-alternative-delete-button' onClick={() => {handleDeleteAlternative(mark)}}>X</button>\r\n            }  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateAlternative","import React, {useState, useEffect} from 'react'\r\nimport './CreateQuestionStyle.css'\r\n\r\nimport CreateAlternative from './CreateAlternative/CreateAlternative'\r\n\r\nfunction CreateQuestion({setQuestionList, index}) {\r\n    let [question, setQuestion] = useState({\r\n        title: '',\r\n        alternatives: [\r\n            {mark: 'A', content: '', correct: false},\r\n            {mark: 'B', content: '', correct: false}\r\n        ]\r\n    })\r\n\r\n    function setQuestionMark(length) {\r\n        switch(length) {\r\n            case 2: \r\n                return 'C'\r\n            case 3:\r\n                return 'D'\r\n            default:\r\n                throw new Error('Length greater than 4 is not accepted.')\r\n        }\r\n    }\r\n\r\n    function handleNewAlternative() {\r\n        let teste = question\r\n        teste.alternatives = question.alternatives.length < 4 ?\r\n            [\r\n                ...question.alternatives,\r\n                {\r\n                    mark: setQuestionMark(question.alternatives.length),\r\n                    content: '',\r\n                    correct: false\r\n                }\r\n            ] :\r\n            question.alternatives\r\n\r\n        setQuestion(preValue => {\r\n            return {...preValue} // o problema é aq\r\n        })\r\n    }\r\n\r\n    function setQuestionValue(mark, content) {\r\n        let updatedAlternative = question.alternatives.map(item => {\r\n            if(item.mark == mark) {\r\n                item.content = content\r\n            }\r\n\r\n            return item\r\n        })\r\n            \r\n        setQuestion(preValue => {\r\n            preValue.alternatives = updatedAlternative\r\n            \r\n            return {...preValue}\r\n        })\r\n    }\r\n\r\n    function setCorrectAlternative(mark) {\r\n        let updatedCorrectAlternative = question.alternatives.map(item => {\r\n            if(item.mark == mark) {\r\n                item.correct = !item.correct\r\n            } else {\r\n                item.correct = false\r\n            }\r\n\r\n            return item\r\n        })\r\n\r\n\r\n        setQuestion(preValue => {\r\n            preValue.alternatives = updatedCorrectAlternative\r\n            \r\n            return {...preValue}\r\n        })\r\n    }\r\n\r\n    function handleDeleteAlternative(mark) {\r\n        // exclue a alternativa do array\r\n        let updatedAlternativesWithDelete = question.alternatives.filter(item => {\r\n            return item.mark != mark\r\n        })\r\n\r\n        // MUDA A ALTERNATIVA \"D\" PARA \"C\" CASO O \"C\" SEJA EXCLUIDO\r\n        updatedAlternativesWithDelete = updatedAlternativesWithDelete.map((item, i) => {\r\n            if(item.mark == 'D' && updatedAlternativesWithDelete.length == 3) { \r\n                item.mark = 'C'\r\n            }\r\n\r\n            return item\r\n        })\r\n\r\n        setQuestion(preValue => {\r\n            preValue.alternatives = updatedAlternativesWithDelete\r\n\r\n            return {...preValue}\r\n        })\r\n    }\r\n\r\n    function handleQuestionTitle(e) {\r\n        setQuestion(preValue => {\r\n            preValue.title = e.target.value\r\n            \r\n            return {...preValue}\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setQuestionList(preValue => {\r\n            preValue[index] = question\r\n\r\n            return [...preValue]\r\n        })\r\n    }, [question])\r\n\r\n    return (\r\n        <div className='create-question'>\r\n            <input type=\"text\" name=\"\" id=\"\" placeholder='PERGUNTA' onChange={handleQuestionTitle} />\r\n            <div className='create-question-alternatives-container'>\r\n                {question.alternatives.map((item, i) => {\r\n                    return (\r\n                        <CreateAlternative \r\n                            mark={item.mark} \r\n                            content={item.content}\r\n                            selected={item.correct}\r\n                            setQuestionValue={setQuestionValue} \r\n                            setCorrectAlternative={setCorrectAlternative}\r\n                            handleDeleteAlternative={handleDeleteAlternative}\r\n                            key={i}\r\n                        />\r\n                    )\r\n                })}\r\n                {question.alternatives.length <= 3 &&\r\n                    <button className='add-alternative-button' onClick={handleNewAlternative}>+</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateQuestion","import React, {useState} from 'react'\r\nimport './CreatePageStyle.css'\r\n\r\nimport CreateQuestion from '../../components/pages/CreatePage/CreateQuestion/CreateQuestion'\r\nimport Button from '../../components/Button/Button'\r\n\r\nimport Notification from '../../components/Notification/Notification'\r\n\r\nimport api from '../../API-CONFIG/API-CONFIG'\r\n\r\nfunction CreatePage() {\r\n    let alternativeSchema = {\r\n        title: '',\r\n        alternatives: [\r\n            {mark: 'A', content: '', correct: false},\r\n            {mark: 'B', content: '', correct: false}\r\n        ]\r\n    }\r\n\r\n    let [questionList, setQuestionList] = useState([alternativeSchema])\r\n\r\n    let [owner, setOwner] = useState('')\r\n    let [theme, setTheme] = useState('')\r\n    let [quizzId, setQuizzId] = useState('')\r\n    let [isQuizzCreated, setIsQuizzCreated] = useState(false)\r\n    let [buttonText, setButtonText] = useState('CRIAR')\r\n    let [isError, setIsError] = useState({\r\n        message: '',\r\n        active: false,\r\n    })\r\n\r\n\r\n    function addNewQuestion() {\r\n        setQuestionList(preValue => {\r\n            return [\r\n                ...preValue,\r\n                alternativeSchema\r\n            ]\r\n        })\r\n    }\r\n\r\n    function handleNewQuizzRequest(e) {\r\n        e.preventDefault()\r\n\r\n        validadeForm()\r\n    }\r\n\r\n    function validadeForm() {\r\n        if(owner.length && theme.length) {\r\n            //validar se as questões e alternativas foram preenchidas corretamente\r\n            let isFormOK = true\r\n\r\n            for(let q of questionList) {\r\n                if(q.title.length) {\r\n                    let hasCorrect = false\r\n\r\n                    for(let a of q.alternatives) {\r\n                        if(a.correct) hasCorrect = true\r\n                        if(!(a.content.length)) {\r\n                            setIsError({\r\n                                message: 'Texto da alternativa não preenchida corretamente',\r\n                                active: true\r\n                            })\r\n\r\n                            isFormOK = false\r\n                            break\r\n                        }\r\n                    }\r\n\r\n                    if(!isFormOK) break // caso não tenha texto na alternativa (o isFormOK foi setado para false)\r\n\r\n                    if(!hasCorrect) {\r\n                        setIsError({\r\n                            message: 'Selecione a alternativa correta da questão',\r\n                            active: true\r\n                        })\r\n\r\n                        isFormOK = false\r\n                        break\r\n                    }\r\n                } else {\r\n                    setIsError({\r\n                        message: 'Título da questão não preenchida',\r\n                        active: true\r\n                    })\r\n\r\n                    isFormOK = false\r\n                    break\r\n                }\r\n            }\r\n\r\n            if(isFormOK) {\r\n                createQuizz()\r\n            }\r\n        } else {\r\n            setIsError({\r\n                message: 'Informações do menu não preenchidas corretamente',\r\n                active: true\r\n            })\r\n        }\r\n    }\r\n\r\n    function createQuizz() {\r\n        setButtonText('CARREGANDO')\r\n        \r\n        api.post('/quizz/add', {\r\n            owner,\r\n            theme: theme,\r\n            questions: questionList\r\n        }).then(response => {\r\n            setQuizzId(response.data.quizzId)\r\n\r\n            setButtonText('CRIADO')\r\n\r\n            setIsQuizzCreated(true)\r\n        }).catch(err => {\r\n            setIsError({\r\n                message: err.response.data.message,\r\n                active: true\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='container' id='create-page'>\r\n            <h1>Sala de criação</h1>\r\n            <main>\r\n                <div className='create-question-container'>\r\n                    {questionList.map((item, i) => {\r\n                        return <CreateQuestion setQuestionList={setQuestionList} index={i} key={i} />\r\n                    })}\r\n                    <button id='add-question' onClick={addNewQuestion}>+</button>\r\n                </div>\r\n                <form id='create-question-menu' onSubmit={handleNewQuizzRequest}>\r\n                    <div id='question-menu-rows'>\r\n                        <input type=\"text\" name=\"\" id=\"\" placeholder='Quizz de (ex: Caio Felipe)' value={owner} onChange={e => setOwner(e.target.value)} />\r\n                        <input type=\"text\" name=\"\" id=\"\" placeholder='Tema (ex: Animais)' value={theme} onChange={e => setTheme(e.target.value)}  />\r\n                        <h3>Perguntas: <strong>{questionList.length}</strong></h3>\r\n                        <input type=\"text\" name=\"\" id=\"\" placeholder='CÓDIGO GERADO' disabled={!isQuizzCreated} value={quizzId} onChange={e => setQuizzId(e.target.value)} />\r\n                    </div>\r\n                    <div id='question-menu-buttons'>\r\n                        <Button to='/' color='#3EACEA'>VOLTAR</Button>\r\n                        <Button type='button' buttonType='submit' disabled={isQuizzCreated} color='#55EC3D'>{buttonText}</Button>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n            {isError.active && <Notification message={isError.message} setIsError={setIsError} active={isError.active} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePage","import React from 'react'\r\nimport './AlternativeStyle.css'\r\n\r\nfunction Alternative({mark, content, isCorrect, handleQuestionResult}) {\r\n    function changeAlternativeColor(status) {\r\n        switch(status) {\r\n            case null:\r\n                return ''\r\n            case true:\r\n                return 'correct'\r\n            default:\r\n                return 'wrong'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button className={`alternative ${changeAlternativeColor(isCorrect)}`} onClick={() => handleQuestionResult(mark)}>\r\n            <span className='alternative-mark'>{mark}</span>\r\n            <h3>{content}</h3>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Alternative","import React, {useState, useEffect, useContext} from 'react'\r\n\r\nimport Alternative from '../../components/pages/QuizzPage/Alternative/Alternative'\r\n\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport {Fade} from '@material-ui/core'\r\n\r\nimport './QuizzPageStyle.css'\r\n\r\nimport Notification from '../../components/Notification/Notification'\r\n\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport api from '../../API-CONFIG/API-CONFIG'\r\n\r\nimport CurrentPlayerIdContext from '../../Contexts'\r\n\r\nfunction QuizzPage() {\r\n    let [isTransitionActive, setIsTransitionActive] = useState(true)\r\n\r\n    let [currentQuestion, setCurrentQuestion] = useState(0)\r\n\r\n    let [isQuizzCompleted, setIsQuizzCompleted] = useState(false)\r\n\r\n    let [userScore, setUserScore] = useState(0)\r\n\r\n    let {quizzId} = useParams()\r\n\r\n    let [currentPlayerId, setCurrentPlayerId] = useContext(CurrentPlayerIdContext)\r\n\r\n    let [isAutorized, setIsAutorized] = useState(false)\r\n\r\n    let [isError, setIsError] = useState({\r\n        message: '',\r\n        active: false,\r\n    })\r\n\r\n    let [quizz, setQuizz] = useState({\r\n        owner: '',\r\n        theme: '',\r\n        questionNum: 0,\r\n        questions: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        api.get(`/quizz/${quizzId}`).then(response => {\r\n            setQuizz(response.data)\r\n        }).catch(err => {\r\n            setIsError({\r\n                message: err.response.data.message, \r\n                active: true\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    function handleQuestionResult(mark) {\r\n        document.querySelectorAll('.alternative').forEach(button => {\r\n            button.disabled = true\r\n        })\r\n\r\n        isAutorized &&\r\n        api.patch(`/player/send-answer?questionId=${quizz.questions[currentQuestion].questionId}&quizzId=${quizzId}&playerId=${currentPlayerId}&chosenAlternative=${mark}`).then(response => {\r\n            setQuizz(preValue => {\r\n                let updatedQuestionResult = preValue\r\n\r\n                updatedQuestionResult.questions[currentQuestion].alternatives.map(item => {\r\n                    item.isCorrect = response.data.correctAlternative == item.mark\r\n\r\n                    return item\r\n                })\r\n\r\n                return {...updatedQuestionResult}\r\n            })\r\n\r\n            setUserScore(preValue => {\r\n                return preValue + response.data.score\r\n            })\r\n        }).catch(err => {\r\n            setIsError({\r\n                message: err.response.data.message, \r\n                active: true\r\n            })\r\n        })\r\n    }\r\n\r\n    function nextQuestionTransition() {\r\n        return new Promise (resolve => {\r\n            setTimeout(() => { // tempo extra pra visualizar a resposta\r\n                setIsTransitionActive(false)\r\n                setTimeout(() => resolve(), 300) // espera a transição de desaparecer concluir\r\n            }, 800)\r\n        })\r\n    }\r\n    \r\n    // TRANSICIONA, TROCA AS QUESTÕES E REDIRECIONA PARA OS RESULTADOS QUANDO ACABA\r\n    useEffect(() => {\r\n        // quando o fetch da api foi feito e pra quando as alterações das alternativas já foram feitas quando clica\r\n        if(quizz.questions.length && quizz.questions[currentQuestion].alternatives[0].isCorrect != null) {\r\n            nextQuestionTransition().then(() => {\r\n                setCurrentQuestion(preValue => {\r\n                    if(preValue + 1 == quizz.questions.length) {\r\n                        setCurrentPlayerId('')\r\n                        setIsQuizzCompleted(true)\r\n\r\n                        return preValue\r\n                    }\r\n                    \r\n                    return preValue + 1\r\n                })\r\n\r\n                setIsTransitionActive(true)\r\n            })\r\n        }\r\n    }, [quizz])\r\n\r\n    useEffect(() => {\r\n        if(currentPlayerId == '') {\r\n            setIsError({\r\n                message: 'Jogador não cadastrado.', \r\n                active: true\r\n            })\r\n\r\n            setTimeout(() => {\r\n                window.location = '/'\r\n            }, 2000)\r\n        } else {\r\n            setIsAutorized(true)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\" id=\"quizz-page\">\r\n            <header>\r\n                <div id='progress-container'>\r\n                    <h3>Questão {currentQuestion + 1} de {quizz.questions.length}</h3>\r\n                    <div id='progress-bar'>\r\n                        <div id='progress-bar-out'>\r\n                            <div id=\"progress-bar-in\" style={{width: `${((currentQuestion + 1) * 100) / quizz.questions.length}%`}} />\r\n                        </div>\r\n                    </div>\r\n                    <span id='quizz-owner'>Quizz de <strong>{quizz.owner}</strong></span>\r\n                </div>\r\n                <div id=\"score\">\r\n                    <h3>\r\n                        Score <br/>\r\n                        <Fade in={isTransitionActive} timeout={300} mountOnEnter unmountOnExit><span>{userScore}</span></Fade>\r\n                    </h3>\r\n                </div>\r\n            </header>\r\n            {isAutorized && quizz.questions.length &&\r\n                <Fade in={isTransitionActive} timeout={300} mountOnEnter unmountOnExit>\r\n                    <main>\r\n                        <h1 id='quizz-title'>{quizz.questions[currentQuestion].title}</h1>\r\n                        <div id=\"alternative-container\">\r\n                            {quizz.questions[currentQuestion].alternatives.map(item => {\r\n                                return <Alternative mark={item.mark} content={item.content} isCorrect={item.isCorrect} handleQuestionResult={handleQuestionResult} />\r\n                            })}\r\n                        </div>\r\n                    </main>\r\n                </Fade>\r\n            }\r\n            {isError.active && <Notification message={isError.message} setIsError={setIsError} active={isError.active} />}\r\n            {isQuizzCompleted && <Redirect to={`/quizz/${quizzId}/results`} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuizzPage","import React, {useEffect, useState} from 'react'\r\nimport './EstatisticBarStyle.css'\r\n\r\nfunction EstatisticBar({place, percentage}) {\r\n    let [transition, setTransition] = useState(0)\r\n\r\n    useEffect(() => {\r\n        setTransition(percentage)\r\n    })\r\n\r\n    return (\r\n        <div className=\"estatistic-bar\" style={{width: `${transition}%`}}>\r\n            <h3>{place}° LUGAR - {percentage}%</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EstatisticBar","import React from 'react'\r\nimport TeamIcon from '../../../TeamIcon/TeamIcon'\r\nimport './PlayerResultStyle.css'\r\n\r\nfunction PlayerResult({username, score, team}) {\r\n    return (\r\n        <div className=\"player-result\">\r\n            <TeamIcon team={team} margin='0 5% 0 0' />\r\n            <h3>{username}</h3>\r\n            <h4 className=\"player-score\">\r\n                Total score <br/>\r\n                <span>{score}</span>\r\n            </h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerResult","import React, {useEffect, useState} from 'react'\r\n\r\nimport Button from '../../components/Button/Button'\r\nimport EstatisticBar from '../../components/pages/ResultsPage/EstatisticBar/EstatisticBar'\r\nimport PlayerResult from '../../components/pages/ResultsPage/PlayerResult/PlayerResult'\r\n\r\nimport './ResultsPageStyle.css'\r\n\r\nimport {Slide, Grow} from '@material-ui/core'\r\n\r\nimport {useParams} from 'react-router-dom'\r\n\r\nimport api from '../../API-CONFIG/API-CONFIG'\r\n\r\nimport Notification from '../../components/Notification/Notification'\r\n\r\nfunction ResultsPage() {\r\n    let {quizzId} = useParams()\r\n\r\n    let [results, setResults] = useState({\r\n        players: [],\r\n        questionNum: 0,\r\n        leaderingTeam: ''\r\n    })\r\n\r\n    let [isError, setIsError] = useState({\r\n        message: '',\r\n        active: false,\r\n    })\r\n\r\n    useEffect(() => {\r\n        api.get(`/quizz/${quizzId}/results`).then(response => {\r\n            setResults(response.data)\r\n        }).catch(err => {\r\n            setIsError({\r\n                message: err.response.data.message, \r\n                active: true\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"container\" id=\"results-page\">\r\n            <h1>Resultados</h1>\r\n            <div id=\"estatistics-container\">\r\n                {results.players.length !== 0 &&\r\n                    [...Array(5)].map((v, i) => {\r\n                        if(results.players[i])\r\n                        return <EstatisticBar percentage={Math.round((results.players[i].score * 100) / (results.questionNum * 200))} place={i + 1} />\r\n                    })\r\n                }\r\n            </div>\r\n            {   results.leaderingTeam !== '' &&\r\n                <Slide direction='left' in mountOnEnter timeout={600}>\r\n                    {results.leaderingTeam == 'Empate' ?\r\n                        <h1 id='winner-team' style={{background: 'green'}}>Empatado!</h1> :\r\n                        <h1 id=\"winner-team\">🎉Time <span>{results.leaderingTeam}</span> liderando!🎉</h1>\r\n                    }\r\n                </Slide>\r\n            }\r\n            <Grow in mountOnEnter timeout={700}>\r\n                <div id=\"results-container\">\r\n                    {results.players.map(v => {\r\n                        return <PlayerResult username={v.username} score={v.score} team={v.team} />\r\n                    })}\r\n                </div>\r\n            </Grow>\r\n            <Button to='/' color='#343330'>VOLTAR</Button>\r\n            {isError.active && <Notification message={isError.message} setIsError={setIsError} active={isError.active} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultsPage","import React, {useState} from 'react'\r\nimport {HashRouter as Router, Route} from 'react-router-dom'\r\n\r\nimport LandingPage from './views/LandingPage/LandingPage'\r\nimport CreatePage from './views/CreatePage/CreatePage'\r\nimport QuizzPage from './views/QuizzPage/QuizzPage'\r\nimport ResultsPage from './views/ResultsPage/ResultsPage'\r\n\r\nimport CurrentPlayerIdContext from './Contexts'\r\n\r\nfunction App() {\r\n    let [currentPlayerId, setCurrentPlayerId] = useState('')\r\n\r\n    return (\r\n        <Router basename='/'>\r\n            <CurrentPlayerIdContext.Provider value={[currentPlayerId, setCurrentPlayerId]}>\r\n                <Route exact path='/' component={LandingPage} />\r\n                <Route exact path='/create' component={CreatePage} />\r\n                <Route exact path='/quizz/:quizzId' component={QuizzPage} />\r\n                <Route exact path='/quizz/:quizzId/results' component={ResultsPage} />\r\n            </CurrentPlayerIdContext.Provider>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}